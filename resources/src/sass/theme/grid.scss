
$--th-grid-steps: (
    3, 4, 5, 6, 7, 8, 9, 10, 12
);

$--th-grid-gutters: (
    10px, 20px, 40px, 60px
);

$--th-grid-breakpoints: (
    'xs': 'screen and (min-width: 320px)',
    'sm': 'screen and (min-width: 480px)',
    'md': 'screen and (min-width: 640px)',
    'lg': 'screen and (min-width: 1024px)',
    'xl': 'screen and (min-width: 1280px)'
);

@function strip($number) {
    @return $number / ($number * 0 + 1);
}

@mixin th-grid($suffix: '') {

    .grid#{$suffix} {
        display: flex;
    }

    .grid--row#{$suffix} {
        flex-direction: row;
    }

    .grid--col#{$suffix} {
        flex-direction: column;
    }

    .grid--wrap#{$suffix} {
        flex-wrap: wrap;
    }

    .grid--row.grid--reverse#{$suffix},
    .grid--row#{$suffix}.grid--reverse#{$suffix} {
        flex-direction: row-reverse;
    }

    .grid--col.grid--reverse#{$suffix},
    .grid--col#{$suffix}.grid--reverse#{$suffix} {
        flex-direction: column-reverse;
    }

    .grid--row.grid--stretch#{$suffix},
    .grid--row#{$suffix}.grid--stretch#{$suffix} {
        justify-content: stretch;
    }

    .grid--col.grid--stretch#{$suffix},
    .grid--col#{$suffix}.grid--stretch#{$suffix} {
        align-items: stretch;
    }

    .grid--row.grid--top#{$suffix},
    .grid--row#{$suffix}.grid--top#{$suffix},
    .grid--col.grid--left#{$suffix},
    .grid--col#{$suffix}.grid--left#{$suffix}{
        align-items: flex-start;
    }

    .grid--row.grid--middle#{$suffix},
    .grid--row#{$suffix}.grid--middle#{$suffix},
    .grid--col.grid--center#{$suffix},
    .grid--col#{$suffix}.grid--center#{$suffix}{
        align-items: center;
    }

    .grid--row.grid--bottom#{$suffix},
    .grid--row#{$suffix}.grid--bottom#{$suffix},
    .grid--col.grid--right#{$suffix},
    .grid--col#{$suffix}.grid--right#{$suffix} {
        align-items: flex-end;
    }

    .grid--row.grid--left#{$suffix},
    .grid--row#{$suffix}.grid--left#{$suffix},
    .grid--col.grid--top#{$suffix},
    .grid--col#{$suffix}.grid--top#{$suffix} {
        justify-content: flex-start;
    }

    .grid--row.grid--center#{$suffix},
    .grid--row#{$suffix}.grid--center#{$suffix},
    .grid--col.grid--middle#{$suffix},
    .grid--col#{$suffix}.grid--middle#{$suffix} {
        justify-content: center;
    }

    .grid--row.grid--right#{$suffix},
    .grid--row#{$suffix}.grid--right#{$suffix},
    .grid--col.grid--bottom#{$suffix},
    .grid--col#{$suffix}.grid--bottom#{$suffix} {
        justify-content: flex-end;
    }

}

@mixin th-gutter($gutter, $suffix: '') {

    .grid--#{strip($gutter)}#{$suffix} {
        width: calc(100% + #{$gutter});
        margin-left: -#{$gutter / 2};
        margin-right: -#{$gutter / 2};
    }

    .grid--#{strip($gutter)}#{$suffix} > [class^="col--"],
    .grid--#{strip($gutter)}#{$suffix} > [class*="col--"] {
        padding-left: $gutter / 2;
        padding-right: $gutter / 2;
    }

}

@mixin th-cols($size, $suffix: '') {

    .col--flex-1#{$suffix} {
        flex: 1 0 auto;
    }

    .col--flex-none#{$suffix} {
        flex: 0 0 auto;
    }

    .col--flex-auto#{$suffix} {
        flex: 1 0 auto;
    }

    @for $i from 1 through $size {
        .col--#{$i}-#{$size}#{$suffix} {
            width: #{((100% / $size) * $i) - 0.001};
        }
    }

}

@include th-grid();

@each $gutter in $--th-grid-gutters {
    @include th-gutter($gutter);
}

@each $steps in $--th-grid-steps {
    @include th-cols($steps);
}

@each $suffix, $breakpoint in $--th-grid-breakpoints {

    @media #{$breakpoint} {

        @include th-grid(\@ + $suffix);

        @each $gutter in $--th-grid-gutters {
            @include th-gutter($gutter, \@ + $suffix);
        }

        @each $steps in $--th-grid-steps {
            @include th-cols($steps, \@ + $suffix);
        }

    }

}

